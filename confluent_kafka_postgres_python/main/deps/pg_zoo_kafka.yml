version: '3'
services:

  postgres:
    image: postgres:latest
    container_name: postgres
    user: root
    ports:
      - 5432:5432
    environment: 
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=admin'
    volumes:
      - ./inits/init.sql:/docker-entrypoint-initdb.d/init.sql
    #   - ./container_vols/vol_postgres_db/pg_data/:/var/lib/postgresql/data/
    networks:
      - kafka_network
    # healthcheck:
    #   test: pg_isready -U admin
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    depends_on:
      - postgres
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka_network
  

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./inits/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - kafka_network

networks:
  kafka_network: {}